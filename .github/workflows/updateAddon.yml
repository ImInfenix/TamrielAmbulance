name: Update and deploy AddOn

on:
  workflow_dispatch: {}

env:
  ADDON_NAME: ${{ github.event.repository.name }}
  ADDON_ARCHIVE_NAME: ${{ github.event.repository.name }}.zip
  ADDON_ID: 3124
  ADDON_INFO_CHANGELOG_PATH: ${{ github.workspace }}/.github/changelog.txt
  ADDON_INFO_COMPATIBLE_PATH: ${{ github.workspace }}/.github/compatible.txt
  ADDON_INFO_DESCRIPTION_PATH: ${{ github.workspace }}/.github/description.txt
  ESOUI_TOKEN: ${{ secrets.ADDON_UPDATE_API_TOKEN }}
  ZIP_EXCLUDE_FILE_PATH: ${{ github.workspace }}/.github/excludeFiles.txt

jobs:
  updateAddon:
    name: Update and deploy ${{ github.event.repository.name }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Retrieve Addon version
        run:  |
            
            echo "ADDON_VERSION=$(cat ${{ env.ADDON_NAME }}.txt | grep AddOnVersion | awk {'print $3'})" >> $GITHUB_ENV

      - name: Zip AddOn content
        run:  |
            echo "Zipping addon content to ${{ env.ADDON_ARCHIVE_NAME }}"
            7z a -xr@"${{ env.ZIP_EXCLUDE_FILE_PATH }}" ${{ env.ADDON_ARCHIVE_NAME }} ../${{ env.ADDON_NAME }}
            echo "Archive created. Listing content..."
            7z l ${{ env.ADDON_ARCHIVE_NAME }}

      - name: Send update to ESOUI
        run: |
            curl -H "x-api-token: ${{ env.ESOUI_TOKEN }}" -F "id=${{ env.ADDON_ID }}" -F "version=${{ env.ADDON_VERSION }}" -F "description=$(cat ${{ env.ADDON_INFO_DESCRIPTION_PATH }})" -F "changelog=$(cat ${{ env.ADDON_INFO_CHANGELOG_PATH }})" -F "compatible=$(cat ${{ env.ADDON_INFO_COMPATIBLE_PATH }})" -F "updatefile=@${{ env.ADDON_ARCHIVE_NAME }}" https://api.esoui.com/addons/update
